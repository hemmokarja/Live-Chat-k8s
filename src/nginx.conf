events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Upstream for backend_service with ip_hash for sticky sessions
    upstream backend_servers {
        ip_hash;
        # least_conn;  # TODO: remove after testing
        server backend_service1:5002;
        server backend_service2:5002;
    }

    server {
        listen 80;
        server_name chatroom.com;

        # Frontend Service
        location / {
            proxy_pass http://frontend_service:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle regular HTTP API requests (like /check_username)
        location /api/ {
            proxy_pass http://backend_servers;  # Send requests to backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket Backend Service
        location /ws/ {
            proxy_pass http://backend_servers;  # Use the upstream group
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 3600;
        }
    }
}
