apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.awsAccountId }}.dkr.ecr.{{ .Values.region }}.amazonaws.com/{{ .Values.backendEcrRepositoryName }}:latest"
          ports:
            - containerPort: {{ .Values.backendServicePort }}
          env:
            - name: FLASK_ENV
              value: "production"
            - name: FLASK_DEBUG
              value: "false"
            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: secret_key
            - name: NUM_REDIS_REPLICAS_TOTAL
              value: "{{ .Values.numRedisReplicasTotal }}"
            - name: REDIS_PORT
              value: "{{ .Values.redisPort }}"
            - name: REDIS_MESSAGEBROKER_SERVICE_NAME
              value: "redis-messagebroker-service"
            - name: REDIS_USERSTATE_SERVICE_NAME
              value: "redis-userstate-service"
            - name: REDIS_USERSTATE_POD_NAME_PREFIX
              value: "redis"
            - name: REDIS_USERSTATE_NAMESPACE
              value: "default"
            - name: REDIS_PASSWORD
              value: "{{ .Values.redisPassword }}"
            - name: ALB_DNS
              value: "{{ .Values.albDns }}"
            - name: CONTAINER_PORT
              value: "{{ .Values.backendServicePort }}"
          resources:
            requests:
              memory: "{{ .Values.backendMemoryRequest }}"
              cpu: "{{ .Values.backendCpuRequest }}"
            limits:
              memory: "{{ .Values.backendMemoryLimit }}"
              cpu: "{{ .Values.backendCpuLimit }}"
          readinessProbe:
            tcpSocket:
              port: {{ .Values.backendServicePort }}
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: {{ .Values.backendServicePort }}
      targetPort: {{ .Values.backendServicePort }}
